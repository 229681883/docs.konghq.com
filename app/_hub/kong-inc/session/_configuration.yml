name: session
service_id: true
route_id: true
consumer_id: false
dbless_compatible: partially
dbless_explanation: |
  `config.storage` must be set to `cookie`. The `kong` strategy uses
  a database, and is not supported. The plugin currently lacks checks
  for this invalid configuration in DB-less mode.
config:
  - name: secret
    required: false
    default: random number generated from `kong.utils.random_string`
    value_in_examples: opensesame
    datatype: string
    encrypted: true
    referenceable: true
    description: |
      The secret that is used in keyed HMAC generation.​
  - name: cookie_name
    required: false
    default: '`session`'
    datatype: string
    description: The name of the cookie.
  - name: cookie_lifetime
    required: false
    default: 3600
    datatype: number
    description: The duration in seconds that the session will remain open.
  - name: cookie_idletime
    required: false
    datatype: number
    description: |
      The cookie idle time (in seconds); if a cookie is not used for this time
      period, the session becomes invalid. This value is not set by default,
      meaning idle time checks are disabled.
  - name: cookie_renew
    required: false
    default: 600
    datatype: number
    description: The remaining duration in seconds of a session at which point the Plugin renews the session.
  - name: cookie_path
    required: false
    default: /
    datatype: string
    description: The resource in the host where the cookie is available.
  - name: cookie_domain
    required: false
    default: 'Set using Nginx variable host, but may be overridden'
    datatype: string
    description: The domain with which the cookie is intended to be exchanged.
  - name: cookie_samesite
    required: false
    default: Strict
    datatype: string
    description: |
      Determines whether and how a cookie may be sent with cross-site requests. `Strict`:
      The browser will send cookies only if the request originated from the website that set the cookie.
      `Lax`: Same-site cookies are withheld on cross-domain subrequests, but will be sent when a user navigates
      to the URL from an external site, for example, by following a link. `None` or `off`: Disables
      the same-site attribute so that a cookie may be sent with cross-site requests. `None` requires
      the Secure attribute (`cookie_secure`) in latest browser versions. For more info, see the
      [SameSite cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite).'
  - name: cookie_httponly
    required: false
    default: true
    datatype: boolean
    description: |
      Applies the `HttpOnly` tag so that the cookie is sent only to a server. See the
      [Restrict access to cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Restrict_access_to_cookies).
  - name: cookie_secure
    required: false
    default: true
    datatype: boolean
    description: |
      Applies the Secure directive so that the cookie may be sent to the server only with an encrypted
      request over the HTTPS protocol. See the
      [Restrict access to cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Restrict_access_to_cookies).
  - name: cookie_discard
    required: false
    default: 10
    datatype: number
    description: The duration in seconds after which an old session’s TTL is updated that an old cookie is discarded.
  - name: cookie_persistent
    minimum_version: "3.1.x"
    required: false
    default: false
    datatype: boolean
    description: |
      Allows the browser to persist cookies even if the browser is closed.
      By default, cookies are not persisted across browser restarts.
  - name: storage
    required: false
    default: cookie
    datatype: string
    description: |
      Determines where the session data is stored. `kong`: Stores encrypted session data into Kong's current database
      strategy; the cookie will not contain any session data. `cookie`: Stores encrypted
      session data within the cookie itself.
  - name: logout_methods
    required: false
    default: '[`"POST"`, `"DELETE"`]'
    datatype: array of string elements
    description: |
      The methods that may be used to end sessions: POST, DELETE, GET.
  - name: logout_query_arg
    required: false
    default: session_logout
    datatype: string
    description: The query argument passed to logout requests.
  - name: logout_post_arg
    required: false
    default: session_logout
    datatype: string
    description: The POST argument passed to logout requests. Do not change this property.
